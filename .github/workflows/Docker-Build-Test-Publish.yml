name: Build Docker Image

on:
  push:

env:
  TEST_VERSION_TAG: mattm12525/simplewebapp:test
  LATEST_VERSION_TAG: mattm12525/simplewebapp:latest
  PROJECT_ID: auto-deploy-simple-web-app
  SERVICE_NAME: simple-web-app
  DOCKER_IMAGE_URL: us-central1-docker.pkg.dev/auto-deploy-simple-web-app/simple-web-app/simple-web-app

jobs:
  build-test-publish-docker-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:    
      - name: login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.LIATRIO_DOCKER_HUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export image to Docker
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{env.TEST_VERSION_TAG}}

      - name: Run nodeJS in background
        run: docker run -p 80:80/tcp mattm12525/simplewebapp:test &            

      - name: Test
        uses: liatrio/github-actions/apprentice-action@0b41561cca6822cc8d880fe0e49e7807a41fdf91

      # - name: Build and push image to Docker
      #   uses: docker/build-push-action@v6
      #   with:
      #     platforms: linux/amd64,linux/arm64
      #     push: true
      #     tags: ${{env.LATEST_VERSION_TAG}}
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Cloud authentication
        uses: google-github-actions/auth@v2
        with: 
          credentials_json: ${{secrets.GCP_SERVICE_ACC_KEY}}
          project_id: ${{env.PROJECT_ID}}
      
      - name: Set up cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          echo $(ls ../..)
          docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest -f Dockerfile .
          docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      - name: Deploy to cloud
        run: |
            echo SERVICE_NAME $SERVICE_NAME
            gcloud run deploy $SERVICE_NAME \
            --image ${{ env.DOCKER_IMAGE_URL }}:latest \
            --port=3000 \
            --platform managed \
            --region us-east1
            --allow-unauthenticated